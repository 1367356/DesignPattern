package iteratorPattern.blackBoxAndInnerIterator;

import iteratorPattern.ConcreteAggregate;

public class ConcreteAggregate extends Aggregate{

	private Object[] objArray=null;
	/**
	 * 构造方法：传入聚集集合的具体内容
	 */
	public ConcreteAggregate(Object[] objArray) {
		// TODO Auto-generated constructor stub
		this.objArray=objArray;
	}
	public Iterator createIterator() {
		// TODO Auto-generated method stub
		return new ConcreteIterator(); //使用内部类，不用将ConcreteAggregate对象暴露出去了
	}
	/**
	 * 内部成员类，具体迭代子类
	 */
	private class ConcreteIterator implements Iterator{

//		//持有被迭代的具体的聚合对象
//		private ConcreteAggregate agg;
		//内部索引，记录当前迭代到的索引位置
		private int index=0;
		//记录当前聚集对象的大小
		private int size=0;

		public ConcreteIterator() {
			// TODO Auto-generated constructor stub
			this.size=objArray.length;
			index=0;
		}
		/**
		 * 迭代方法：移动到第一个元素
		 */
		public void first() {
			// TODO Auto-generated method stub
			index=0;
		}

		/**
		 * 迭代方法：是否为下一个元素
		 */
		public void next() {
			// TODO Auto-generated method stub
			if(index<size){
				index++;
			}
		}

		/**
		 * 迭代方法，是否为最后一个元素
		 */
		public boolean isDone() {
			// TODO Auto-generated method stub
			return (index>=size);
		}

		/**
		 * 迭代方法：返回当前元素
		 */
		public Object currentItem() {
			// TODO Auto-generated method stub
			return agg.getElement(index);
		}
	}
	
}
